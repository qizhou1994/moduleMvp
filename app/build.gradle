
static def buildTime() {
    return new Date().format("yyyyMMdd");
}
/*apply plugin: 'bugly'
bugly {
    appId = 'ccb5fea8ab'
    appKey = 'f7208380-fff3-467a-8d03-bae9cd8a7092'
}*/
apply plugin: 'bugly'
bugly {
    appId = 'ccb5fea8ab'
    appKey = 'f7208380-fff3-467a-8d03-bae9cd8a7092'
}
android {
    signingConfigs {
        release {
            keyAlias 'moduleMvpKey'
            keyPassword '123456'
            storeFile file('../moduleMvp.jks')
            storePassword '123456'
        }
    }
    // env setup
    flavorDimensions "app"
    defaultConfig {
        applicationId "com.zq.modulemvp"
        multiDexEnabled true
        //打包时间
        resValue "string", "build_time", buildTime()
    }

    buildTypes {
        release {
            //更改AndroidManifest.xml中预先定义好占位符信息
            //manifestPlaceholders = [app_icon: "@drawable/icon"]
            // 不显示Log
            buildConfigField "boolean", "LEO_DEBUG", "false"
            //是否zip对齐
            zipAlignEnabled true
            // 缩减resource文件
            shrinkResources true
            //Proguard
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.release
        }

        debug {
            //给applicationId添加后缀“.debug”
//            applicationIdSuffix ".debug"
            //manifestPlaceholders = [app_icon: "@drawable/launch_beta"]
            buildConfigField "boolean", "LOG_DEBUG", "true"
            zipAlignEnabled false
            shrinkResources false
            minifyEnabled false
            debuggable true
        }
    }

}


dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.support.multidex
    implementation project(':basemvp')
//    annotationProcessor deps.arouter.compiler
    if (!isModule.toBoolean()) {
//        compile project(':other')
        implementation project(':index')
//        compile project(':mine')
    }

}
